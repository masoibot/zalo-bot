const { roomChatAll } = require('../Chat/Utils');
const nightDoneCheck = require('../Night/nightDoneCheck');
const dayVoteCheck = require('../Day/dayVoteCheck');
const yesNoVoteCheck = require('../Day/yesNoVoteCheck');

module.exports = (gamef, bot) => {
    const adminCallback = (payload, chat) => {
        let joinID = payload.sender.id;

        const askCMD = (convo) => {
            convo.ask(`C√°c l·ªánh c∆° b·∫£n:\nƒê·ªÉ reset 2 ph√≤ng: /resetAll\nƒê·ªÉ kick ng∆∞·ªùi ch∆°i: /kick <userRoom> <userID>\nH·ªßy: /cancel`, (payload, convo) => {
                if (!payload.message) {
                    convo.say('```\nVui l√≤ng nh·∫≠p l·ªánh h·ª£p l·ªá\n```');
                    convo.end();
                    return;
                } else {
                    const chatTxt = payload.message.text;
                    if (chatTxt.match(/\/resetAll/g)) {
                        gamef.resetAllRoom();
                        chat.say('ƒê√£ t·∫°o l·∫°i c√°c ph√≤ng ch∆°i v√† x√≥a c√°c ng∆∞·ªùi ch∆°i!');
                        console.log('$ ROOM > RESET_ALL');
                        convo.end();
                    } else if (chatTxt.match(/\/kick.[0-9]+.[0-9]+/g)) {
                        let userRoom = chatTxt.match(/[0-9]+/g)[0] - 1;
                        let userID = chatTxt.match(/[0-9]+/g)[1];
                        let leaveRole;
                        let player = gamef.getRoom(userRoom).players[userID];
                        let playerJoinID = player.joinID;
                        if (!gamef.getRoom(userRoom).ingame) {
                            gamef.getRoom(userRoom).deletePlayerByID(userID);
                            gamef.setUserRoom(playerJoinID, undefined);
                            bot.say(playerJoinID, '```\nB·∫°n ƒë√£ b·ªã kick ra kh·ªèi ph√≤ng ch∆°i do ƒë√£ AFK qu√° l√¢u!\n```');
                            roomChatAll(bot, gamef.getRoom(userRoom).players, playerJoinID, `\`\`\`\n${player.first_name} ƒë√£ b·ªã kick ra kh·ªèi ph√≤ng ch∆°i do ƒë√£ AFK qu√° l√¢u!\n\`\`\``);
                        } else {
                            gamef.getRoom(userRoom).killAction(player.id);
                            leaveRole = player.role;
                            bot.say(playerJoinID, '```\nB·∫°n ƒë√£ b·ªã ADMIN s√°t h·∫°i do ƒë√£ AFK qu√° l√¢u!\n```');
                            roomChatAll(bot, gamef.getRoom(userRoom).players, playerJoinID, `\`\`\`\n${player.first_name} ƒë√£ b·ªã ADMIN s√°t h·∫°i (do AFK qu√° l√¢u) v·ªõi vai tr√≤ l√†: ${leaveRole == -1 ? 'üê∫S√ìI' : leaveRole == 1 ? 'üîçTI√äN TRI' : leaveRole == 2 ? 'üóøB·∫¢O V·ªÜ' : leaveRole == 3 ? 'üî´TH·ª¢ SƒÇN' : 'üí©D√ÇN TH∆Ø·ªúNG'}\n\`\`\``);
                            gamef.getRoom(userRoom).newLog(`\`\`\`\n${user.first_name} ƒë√£ b·ªã ADMIN s√°t h·∫°i (do AFK qu√° l√¢u) v·ªõi vai tr√≤ l√†: ${leaveRole == -1 ? 'üê∫S√ìI' : leaveRole == 1 ? 'üîçTI√äN TRI' : leaveRole == 2 ? 'üóøB·∫¢O V·ªÜ' : leaveRole == 3 ? 'üî´TH·ª¢ SƒÇN' : 'üí©D√ÇN TH∆Ø·ªúNG'}\n\`\`\``);
                            if (gamef.getRoom(userRoom).isNight) {
                                gamef.getRoom(userRoom).roleIsDone((isDone) => {
                                    if (isDone) {
                                        gamef.func(nightDoneCheck, bot, userRoom);
                                    }
                                });
                            } else if (gamef.getRoom(userRoom).isMorning) {
                                gamef.getRoom(userRoom).roleIsDone((isDone) => {
                                    if (isDone) {
                                        gamef.func(dayVoteCheck, bot, userRoom);
                                    }
                                });
                            } else {
                                gamef.getRoom(userRoom).roleIsDone((isDone) => {
                                    if (isDone) {
                                        gamef.func(yesNoVoteCheck, bot, userRoom);
                                    }
                                });
                            }
                        }
                        convo.say('Th√†nh c√¥ng!');
                        convo.end();
                        console.log(`$ ROOM ${userRoom} > KICK PLAYER ${player.first_name}`);
                    } else {
                        convo.say(`B·∫°n ƒë√£ h·ªßy kh√¥ng th·ª±c hi·ªán l·ªánh n√†o!`)
                        convo.end();
                    }
                }
            });
        };

        if (['2643770348982136', '2023444534356078', '2283562135018064'].indexOf(joinID) != -1) {
            console.log(`ADMIN ${joinID} (2643: DUY, 2023: LINH, 2283: TR∆Ø·ªúNG)!`);
            chat.conversation((convo) => {
                askCMD(convo);
            });
        } else {
            chat.say('```\nB·∫°n kh√¥ng c√≥ quy·ªÅn th·ª±c hi·ªán y√™u c·∫ßu n√†y!\n```');
        }
    };
    // listen ADMIN_COMMAND message
    bot.on('postback:ADMIN_COMMAND', adminCallback);
    bot.hear(/\/admin/i, adminCallback);
};